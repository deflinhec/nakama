// Copyright 2018 The Nakama Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * The RPC protocol for the developer console.
 */
syntax = "proto3";

package nakama.api.wallet;

import "apiwallet/api.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/heroiclabs/nakama/v3/console";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Nakama console API v2";
    version: "2.0";
    contact: {
      name: "The Nakama Authors & Contributors";
      url: "https://github.com/heroiclabs/nakama";
      email: "hello@heroiclabs.com";
    };
  };
  host: "127.0.0.1:7351";
  external_docs: {
    url: "https://heroiclabs.com/docs";
    description: "Nakama server console documentation";
  }
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  security_definitions: {
    security: {
      key: "BasicAuth";
      value: {
        type: TYPE_BASIC;
      }
    }
    security: {
      // Made up security so we can apply "Bearer <JWT_TOKEN>"
      key: "BearerJwt";
      value: {};
    }
  }
  // Default security definition.
  security: {
    security_requirement: {
      key: "BearerJwt";
      value: {};
    }
  },
};

/**
 * The developer console RPC protocol service built with GRPC.
 */
service WalletProvider {
  // Deposit amount of currency to user account.
  rpc DepositFromWalletProvider (TransactionRequest) returns (BalanceResponse) {
    option (google.api.http) = {
      post: "/v2/console/wallet/{currency}/deposit",
      body: "*"
    };
  }

  // Withdraw amount of currency from user account.
  rpc WithdrawFromWalletProvider (TransactionRequest) returns (BalanceResponse) {
    option (google.api.http) = {
      post: "/v2/console/wallet/{currency}/withdraw",
      body: "*"
    };
  }

  // Get currency balance of from user account.
  rpc GetWalletBalance (BalanceRequest) returns (BalanceResponse) {
    option (google.api.http).get = "/v2/console/wallet/{currency}/{user_id}";
  }

}