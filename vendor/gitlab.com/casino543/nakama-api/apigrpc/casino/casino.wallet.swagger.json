{
  "swagger": "2.0",
  "info": {
    "title": "Nakama API v2",
    "version": "2.0",
    "contact": {
      "name": "The Nakama Authors \u0026 Contributors",
      "url": "https://github.com/heroiclabs/nakama",
      "email": "hello@heroiclabs.com"
    }
  },
  "tags": [
    {
      "name": "Wallet"
    }
  ],
  "host": "127.0.0.1:7350",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/provider/wallet/authorize": {
      "post": {
        "summary": "Authorize a user against the wallet provider.",
        "operationId": "Wallet_AuthorizeWalletProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ],
        "security": [
          {
            "BearerJwt": []
          }
        ]
      }
    },
    "/v2/provider/wallet/chains": {
      "get": {
        "summary": "Query the wallet provider supported chain.",
        "operationId": "Wallet_QueryChainsFromWalletProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiChainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/v2/provider/wallet/{chain}/address": {
      "get": {
        "summary": "Retrieve user wallet address from wallet provider.",
        "operationId": "Wallet_RetrieveAddressFromWalletProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chain",
            "description": "The chain name.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ],
        "security": [
          {
            "BearerJwt": []
          }
        ]
      }
    }
  },
  "definitions": {
    "apiAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The wallet address."
        }
      },
      "description": "Return a wallet address base on selected chain."
    },
    "apiChainInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name."
        },
        "fee": {
          "type": "integer",
          "format": "int64",
          "description": "The charging fee."
        },
        "minimum": {
          "type": "integer",
          "format": "int64",
          "description": "The minimum balance threshold."
        }
      }
    },
    "apiChainResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiChainInfo"
          },
          "description": "The list of chain."
        }
      },
      "description": "Return avaliable list of chain."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    },
    "BearerJwt": {
      "type": ""
    },
    "HttpKeyAuth": {
      "type": "apiKey",
      "name": "http_key",
      "in": "header"
    }
  },
  "security": [
    {
      "BearerJwt": []
    }
  ],
  "externalDocs": {
    "description": "Nakama server documentation",
    "url": "https://heroiclabs.com/docs"
  }
}
