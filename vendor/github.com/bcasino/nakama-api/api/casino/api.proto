// Copyright 2023 Deflinhec
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package nakama.casino.api;

option go_package = "github.com/bcasino/nakama-api/api/casino;api";

option java_multiple_files = true;
option java_outer_classname = "NakamaCasinoApi";
option java_package = "com.heroiclabs.nakama.casino.api";

option csharp_namespace = "Nakama.Casino.Protobuf";

message BalanceRequest {
    // The user ID this wallet item belongs to.
    string user_id = 1;
    // The currency type.
    string currency = 2;
}
  
message TransactionRequest {
    // The user ID this wallet item belongs to.
    string user_id = 1;
    // The order id of transaction.
    string order_id = 2;
    // The currency type.
    string currency = 3;
    // The amount to withdraw.
    int64 amount = 4;
}

message BalanceResponse {
    // The user ID this wallet item belongs to.
    string user_id = 1;
    // The order id of transaction.
    string order_id = 2;
    // The currency type.
    string currency = 3;
    // The amount to withdraw.
    int64 balance = 4;
}

message ChainInfo {
    // The name.
    string name = 1;
    // The charging fee.
    uint32 fee = 2;
    // The minimum balance threshold.
    uint32 minimum = 3;
}

// Return avaliable list of chain.
message ChainResponse {
    // The list of chain.
    repeated ChainInfo info = 1;
}

// Get a wallet address base on selected chain.
message AddressRequest {
    // The chain name.
    string chain = 1;
}

// Return a wallet address base on selected chain.
message AddressResponse {
    // The wallet address.
    string address = 1;
}
