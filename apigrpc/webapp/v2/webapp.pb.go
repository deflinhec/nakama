// Copyright 2023 Deflinhec
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: webapp/v2/webapp.proto

package webappv2

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Feature.
type Feature int32

const (
	// Email verification.
	Feature_EMAIL_VERIFICATION Feature = 0
	// Verification code.
	Feature_VERIFICATION_CODE Feature = 1
)

// Enum value maps for Feature.
var (
	Feature_name = map[int32]string{
		0: "EMAIL_VERIFICATION",
		1: "VERIFICATION_CODE",
	}
	Feature_value = map[string]int32{
		"EMAIL_VERIFICATION": 0,
		"VERIFICATION_CODE":  1,
	}
)

func (x Feature) Enum() *Feature {
	p := new(Feature)
	*p = x
	return p
}

func (x Feature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Feature) Descriptor() protoreflect.EnumDescriptor {
	return file_webapp_v2_webapp_proto_enumTypes[0].Descriptor()
}

func (Feature) Type() protoreflect.EnumType {
	return &file_webapp_v2_webapp_proto_enumTypes[0]
}

func (x Feature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Feature.Descriptor instead.
func (Feature) EnumDescriptor() ([]byte, []int) {
	return file_webapp_v2_webapp_proto_rawDescGZIP(), []int{0}
}

// Get avaliable features response.
type Features struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of features.
	Features []Feature `protobuf:"varint,1,rep,packed,name=features,proto3,enum=elysiumrealms.webapp.v2.Feature" json:"features,omitempty"`
}

func (x *Features) Reset() {
	*x = Features{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webapp_v2_webapp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Features) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Features) ProtoMessage() {}

func (x *Features) ProtoReflect() protoreflect.Message {
	mi := &file_webapp_v2_webapp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Features.ProtoReflect.Descriptor instead.
func (*Features) Descriptor() ([]byte, []int) {
	return file_webapp_v2_webapp_proto_rawDescGZIP(), []int{0}
}

func (x *Features) GetFeatures() []Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

// An email request.
type EmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email address.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailRequest) Reset() {
	*x = EmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webapp_v2_webapp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRequest) ProtoMessage() {}

func (x *EmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webapp_v2_webapp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRequest.ProtoReflect.Descriptor instead.
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return file_webapp_v2_webapp_proto_rawDescGZIP(), []int{1}
}

func (x *EmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// Verify email register code request.
type VerifyRegisterCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email address.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The code which sent towards the email.
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyRegisterCodeRequest) Reset() {
	*x = VerifyRegisterCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webapp_v2_webapp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyRegisterCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyRegisterCodeRequest) ProtoMessage() {}

func (x *VerifyRegisterCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webapp_v2_webapp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyRegisterCodeRequest.ProtoReflect.Descriptor instead.
func (*VerifyRegisterCodeRequest) Descriptor() ([]byte, []int) {
	return file_webapp_v2_webapp_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyRegisterCodeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *VerifyRegisterCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Verfiy password reset request.
type VerifyPasswordResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The token which sent towards the email.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// The renewed password.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *VerifyPasswordResetRequest) Reset() {
	*x = VerifyPasswordResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webapp_v2_webapp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPasswordResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasswordResetRequest) ProtoMessage() {}

func (x *VerifyPasswordResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webapp_v2_webapp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasswordResetRequest.ProtoReflect.Descriptor instead.
func (*VerifyPasswordResetRequest) Descriptor() ([]byte, []int) {
	return file_webapp_v2_webapp_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyPasswordResetRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *VerifyPasswordResetRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// Verfiy email address request.
type VerifyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The token which sent towards the email.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *VerifyEmailRequest) Reset() {
	*x = VerifyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webapp_v2_webapp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailRequest) ProtoMessage() {}

func (x *VerifyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_webapp_v2_webapp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailRequest.ProtoReflect.Descriptor instead.
func (*VerifyEmailRequest) Descriptor() ([]byte, []int) {
	return file_webapp_v2_webapp_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyEmailRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_webapp_v2_webapp_proto protoreflect.FileDescriptor

var file_webapp_v2_webapp_proto_rawDesc = []byte{
	0x0a, 0x16, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x65, 0x62, 0x61,
	0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75,
	0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69,
	0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x08,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65, 0x6c, 0x79,
	0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x45, 0x0a, 0x19,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x1a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x2a, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2a,
	0x38, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x32, 0xec, 0x06, 0x0a, 0x06, 0x57, 0x65,
	0x62, 0x41, 0x70, 0x70, 0x12, 0x5e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x65, 0x6c,
	0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x14,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x32, 0x2f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x12, 0x7a, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x2e,
	0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65,
	0x62, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x78, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x25, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75,
	0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01,
	0x2a, 0x22, 0x17, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x7d, 0x0a, 0x15, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x25, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f,
	0x76, 0x32, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x13, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x12, 0x33, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d,
	0x73, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x32, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x76, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2b, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x2a, 0x1a, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x7b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x7d, 0x12, 0x88, 0x01,
	0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1e, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x63, 0x6f, 0x64,
	0x65, 0x2f, 0x7b, 0x63, 0x6f, 0x64, 0x65, 0x7d, 0x42, 0x93, 0x04, 0x0a, 0x1b, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x77,
	0x65, 0x62, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x32, 0x42, 0x0b, 0x57, 0x65, 0x62, 0x61, 0x70, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x65, 0x72, 0x6f, 0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6e,
	0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x70, 0x69, 0x67, 0x65, 0x6e, 0x2f,
	0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x32, 0x3b, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70,
	0x76, 0x32, 0xa2, 0x02, 0x03, 0x45, 0x57, 0x58, 0xaa, 0x02, 0x17, 0x45, 0x6c, 0x79, 0x73, 0x69,
	0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x61, 0x70, 0x70, 0x2e,
	0x56, 0x32, 0xca, 0x02, 0x17, 0x45, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x73, 0x5c, 0x57, 0x65, 0x62, 0x61, 0x70, 0x70, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x23, 0x45,
	0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x5c, 0x57, 0x65, 0x62,
	0x61, 0x70, 0x70, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x19, 0x45, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x73, 0x3a, 0x3a, 0x57, 0x65, 0x62, 0x61, 0x70, 0x70, 0x3a, 0x3a, 0x56, 0x32, 0x92, 0x41,
	0xac, 0x02, 0x12, 0x73, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x41, 0x70, 0x70, 0x20, 0x41, 0x50, 0x49,
	0x20, 0x76, 0x32, 0x22, 0x5d, 0x0a, 0x1a, 0x54, 0x68, 0x65, 0x20, 0x45, 0x6c, 0x79, 0x73, 0x69,
	0x75, 0x6d, 0x20, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x12, 0x20, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x69,
	0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e, 0x63, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x1a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x40, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e,
	0x63, 0x6f, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30,
	0x2e, 0x31, 0x3a, 0x38, 0x33, 0x35, 0x30, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x20,
	0x0a, 0x0f, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x02, 0x08,
	0x01, 0x0a, 0x0d, 0x0a, 0x09, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x4a, 0x77, 0x74, 0x12, 0x00,
	0x62, 0x0f, 0x0a, 0x0d, 0x0a, 0x09, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x4a, 0x77, 0x74, 0x12,
	0x00, 0x72, 0x4b, 0x0a, 0x23, 0x45, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x20, 0x52, 0x65, 0x61,
	0x6c, 0x6d, 0x73, 0x20, 0x57, 0x65, 0x62, 0x41, 0x70, 0x70, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x69, 0x75, 0x6d, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x73, 0x2e,
	0x63, 0x6f, 0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x61, 0x70, 0x70, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_webapp_v2_webapp_proto_rawDescOnce sync.Once
	file_webapp_v2_webapp_proto_rawDescData = file_webapp_v2_webapp_proto_rawDesc
)

func file_webapp_v2_webapp_proto_rawDescGZIP() []byte {
	file_webapp_v2_webapp_proto_rawDescOnce.Do(func() {
		file_webapp_v2_webapp_proto_rawDescData = protoimpl.X.CompressGZIP(file_webapp_v2_webapp_proto_rawDescData)
	})
	return file_webapp_v2_webapp_proto_rawDescData
}

var file_webapp_v2_webapp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_webapp_v2_webapp_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_webapp_v2_webapp_proto_goTypes = []interface{}{
	(Feature)(0),                       // 0: elysiumrealms.webapp.v2.Feature
	(*Features)(nil),                   // 1: elysiumrealms.webapp.v2.Features
	(*EmailRequest)(nil),               // 2: elysiumrealms.webapp.v2.EmailRequest
	(*VerifyRegisterCodeRequest)(nil),  // 3: elysiumrealms.webapp.v2.VerifyRegisterCodeRequest
	(*VerifyPasswordResetRequest)(nil), // 4: elysiumrealms.webapp.v2.VerifyPasswordResetRequest
	(*VerifyEmailRequest)(nil),         // 5: elysiumrealms.webapp.v2.VerifyEmailRequest
	(*emptypb.Empty)(nil),              // 6: google.protobuf.Empty
}
var file_webapp_v2_webapp_proto_depIdxs = []int32{
	0, // 0: elysiumrealms.webapp.v2.Features.features:type_name -> elysiumrealms.webapp.v2.Feature
	6, // 1: elysiumrealms.webapp.v2.WebApp.GetFeatures:input_type -> google.protobuf.Empty
	2, // 2: elysiumrealms.webapp.v2.WebApp.SendEmailRegisterCode:input_type -> elysiumrealms.webapp.v2.EmailRequest
	2, // 3: elysiumrealms.webapp.v2.WebApp.SendEmailVerifyLink:input_type -> elysiumrealms.webapp.v2.EmailRequest
	2, // 4: elysiumrealms.webapp.v2.WebApp.SendPasswordResetLink:input_type -> elysiumrealms.webapp.v2.EmailRequest
	4, // 5: elysiumrealms.webapp.v2.WebApp.VerifyPasswordReset:input_type -> elysiumrealms.webapp.v2.VerifyPasswordResetRequest
	5, // 6: elysiumrealms.webapp.v2.WebApp.VerifyEmail:input_type -> elysiumrealms.webapp.v2.VerifyEmailRequest
	3, // 7: elysiumrealms.webapp.v2.WebApp.VerifyRegisterCode:input_type -> elysiumrealms.webapp.v2.VerifyRegisterCodeRequest
	1, // 8: elysiumrealms.webapp.v2.WebApp.GetFeatures:output_type -> elysiumrealms.webapp.v2.Features
	6, // 9: elysiumrealms.webapp.v2.WebApp.SendEmailRegisterCode:output_type -> google.protobuf.Empty
	6, // 10: elysiumrealms.webapp.v2.WebApp.SendEmailVerifyLink:output_type -> google.protobuf.Empty
	6, // 11: elysiumrealms.webapp.v2.WebApp.SendPasswordResetLink:output_type -> google.protobuf.Empty
	6, // 12: elysiumrealms.webapp.v2.WebApp.VerifyPasswordReset:output_type -> google.protobuf.Empty
	6, // 13: elysiumrealms.webapp.v2.WebApp.VerifyEmail:output_type -> google.protobuf.Empty
	6, // 14: elysiumrealms.webapp.v2.WebApp.VerifyRegisterCode:output_type -> google.protobuf.Empty
	8, // [8:15] is the sub-list for method output_type
	1, // [1:8] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_webapp_v2_webapp_proto_init() }
func file_webapp_v2_webapp_proto_init() {
	if File_webapp_v2_webapp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_webapp_v2_webapp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Features); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webapp_v2_webapp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webapp_v2_webapp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyRegisterCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webapp_v2_webapp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPasswordResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webapp_v2_webapp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webapp_v2_webapp_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webapp_v2_webapp_proto_goTypes,
		DependencyIndexes: file_webapp_v2_webapp_proto_depIdxs,
		EnumInfos:         file_webapp_v2_webapp_proto_enumTypes,
		MessageInfos:      file_webapp_v2_webapp_proto_msgTypes,
	}.Build()
	File_webapp_v2_webapp_proto = out.File
	file_webapp_v2_webapp_proto_rawDesc = nil
	file_webapp_v2_webapp_proto_goTypes = nil
	file_webapp_v2_webapp_proto_depIdxs = nil
}
